@model CarpooliDotTN.Models.Carpool

@{
    ViewData["Title"] = "Details";
    
}

<h1>Details</h1>

<div>
    <h4>Carpool</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DepartureTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DepartureTime)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CreationTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CreationTime)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DepartureCity)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DepartureCity)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ArrivalCity)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ArrivalCity)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.NumberOfPlaces)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.NumberOfPlaces)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.IsOpen)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IsOpen)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Owner)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => @ViewData["OwnerFullName"])
        </dd>
    </dl>
</div>
<hr/>
<div class="d-flex flex-wrap">
    @if ( ! ViewBag.IsEditable??false)
    {
<a asp-action="Apply" class="btn btn-warning cols-5" asp-controller="Demand" asp-route-id="@Model.Id" >Apply</a>
    }
    else
    {
        
        <a class="btn btn-secondary btn-info m-2" id="received" href="@Url.Action("List","Demand",new{id=@Model.Id})"> Received Demands </a>
        <div id="Boutton">@*Placeholder for open and remove button*@</div>
        <a class="btn btn-secondary btn-warning m-2" href="@Url.Action("Edit","Carpool",new{id=@Model.Id})"> Edit infos</a>
        <a class="btn btn-primary btn-danger m-2" href="@Url.Action("Delete","Carpool", new {id=@Model.Id})"> Delete !</a>
<script>
    @{
        string disabled = (Model.NumberOfPlaces == 0) ?"disabled":"";
    }
    function createOpenButton(){
        let divElement = document.createElement('div');
        divElement.classList.add('btn', 'btn-secondary', 'btn-success', 'm-2');
        divElement.id = 'openOfferBtn';
        divElement.textContent = 'Re-Open Offer';
        return divElement;
    }
    function createCloseButton(){
        let divElement = document.createElement('div');
        divElement.classList.add('btn', 'btn-secondary', 'btn-danger', 'm-2');
        divElement.id = 'closeOfferBtn';
        divElement.textContent = 'Close Offer';
        return divElement;
    }
    let openBtn = createOpenButton();
    let closeBtn = createCloseButton();
    const carpoolId = "@Model.Id"; 
    if(@Model.IsOpen.ToString().ToLower())
        document.getElementById('Boutton').replaceWith(closeBtn);
    else
        document.getElementById('Boutton').replaceWith(openBtn);   
    closeBtn.addEventListener('click', async function() {
        console.log("entered event listener for close button to open it ");
        const apiUrl = `/api/Carpool/CloseOffer/${carpoolId}`;
        try {
            const response = await fetch(apiUrl, { method: 'POST' });
            const data = await response.json();

            if (!data.IsOpen) {
               closeBtn.replaceWith(openBtn);
            }
        } catch (error) {
            console.error('Error:', error);
            alert('An error occurred while closing the carpool offer.');
        }
    });
    
    openBtn.addEventListener('click', async function() {
        console.log("entered event listener for open button to close it "); 
        const apiUrl = `/api/Carpool/reopenOffer/${carpoolId}`;
         try {
             const response = await fetch(apiUrl, { method: 'POST' });
             const data = await response.json();
             console.log(data);
             console.log(data.isOpen);
             if (data.isOpen){
                 openBtn.replaceWith(closeBtn);
             }
         } catch (error) {
             console.error('Error:', error);
             alert('An error occurred while closing the carpool offer.');
        }
    });
</script>

    }

</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>


